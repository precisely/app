// JSONData, with optional additional allowed type:
export type JSONData<T = null> = null | boolean | string | number | T | { [key: string]: JSONData<T> } | JSONData<T>[];

export type ContinueCallback = (data?: JSONData, permit?: JSONData) => Promise<void>;

export interface ChatProps {
  id?: string,  // so React doesn't whine
  type: string, // the key which dispatches to the actual React component via ComponentMap
  permit?: JSONData,
  continueCallback: ContinueCallback, // generated by RunUI, provides a way for components to advance the run
  [key: string]: JSONData<Function>
};
